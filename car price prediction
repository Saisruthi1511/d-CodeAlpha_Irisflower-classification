# Step 1: Import Libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Step 2: Load Data
data = pd.read_csv('car_data.csv')

# Step 3: Data Preprocessing
# Handling categorical data using Label Encoding for simplicity (One-Hot Encoding could be used as well)
label_encoder = LabelEncoder()
data['Brand'] = label_encoder.fit_transform(data['Brand'])
data['Fuel_Type'] = label_encoder.fit_transform(data['Fuel_Type'])

# Features and Target variable
X = data.drop(columns=['Price'])  # Features
y = data['Price']  # Target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Feature Scaling (important for algorithms like SVR)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Step 5: Train a Random Forest Regressor model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 6: Model Prediction
y_pred = model.predict(X_test)

# Step 7: Model Evaluation
print("Mean Absolute Error:", mean_absolute_error(y_test, y_pred))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("Root Mean Squared Error:", np.sqrt(mean_squared_error(y_test, y_pred)))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Step 8: Predict the price for a new car (example)
new_car = np.array([[1, 2018, 15000, 200, 1]])  # Example: Brand=1, Year=2018, Mileage=15000, Horsepower=200, Fuel_Type=1
new_car_scaled = scaler.transform(new_car)  # Scaling the new input
predicted_price = model.predict(new_car_scaled)
print("Predicted Price for the new car: $", predicted_price[0])
